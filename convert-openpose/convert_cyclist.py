import os
from pathlib import Path
import json
from pprint import pprint


def list_video_names(videos_path, video_list_file):
    """
    Creates a file containing the list of all the video names for the videos in 'video_path'
    """
    with open(video_list_file, 'w') as f:
        p = Path(videos_path)
        for path in p.glob('*.avi'):
            video_path = str(path)
            video_name = (video_path.split('/')[-1]).split('.')[0]
            f.write(video_name + '\n')

if __name__ == "__main__":
    # folder that contains all the video that have been treated by OpenPose
    #videos_path = 'cyclist_avi/train'
    videos_path = 'cyclist_avi/test'
    # folder that contains all the JSON files generated by OpenPose (for all the frames of all the videos)
    openpose_json_path = 'cyclist_json'
    # folder that will contain the converted files (one per video)
    #stgcn_json_path =  'cyclist_st-gcn_format/train/'
    stgcn_json_path =  'cyclist_st-gcn_format/test/'
    # file that will contain the list of all the video file names that were treated by OpenPose
    #video_list_file = 'cyclist_data_list/train.dat'
    video_list_file = 'cyclist_data_list/test.dat'
    # file that will contain the labels for each video
    #labels_file = 'cyclist_labels/train.json'
    labels_file = 'cyclist_labels/test.json'
    list_video_names(videos_path, video_list_file)
    p = Path(openpose_json_path)
    
    labels = {}
    with open(video_list_file, 'r') as f:
        for line in f:
            video_name  = line.strip('\n')
            stgcn_data_array = []
            stgcn_data = {}
            dest_path = stgcn_json_path + video_name + '.json'
            for path in p.glob(video_name + '*.json'): # each json file for this video
                json_path = str(path)
                frame_id = int(((json_path.split('/')[-1]).split('.')[0]).split('_')[-2])
                if frame_id > 299:
                    continue
                frame_data = {'frame_index': frame_id}
                data = json.load(open(json_path))
                skeletons = []        
                for person in data['people']:
                    score, coordinates = [], []
                    skeleton = {}
                    keypoints = person['pose_keypoints_2d']
                    for i in range(0, len(keypoints), 3):
                        coordinates +=  [keypoints[i], keypoints[i + 1]]
                        score += [keypoints[i + 2]]
                    skeleton['pose'] = coordinates
                    skeleton['score'] = score
                    skeletons += [skeleton]
                frame_data['skeleton'] = skeletons
                stgcn_data_array += [frame_data]

            labels[video_name] = {"has_skeleton": True, 
                "label": "fake_label", 
                "label_index": 0}
            
            stgcn_data['data'] = stgcn_data_array
            stgcn_data['label'] = video_name.split('_')[0]
            if stgcn_data['label'] == 'notice':
                stgcn_data['label_index'] = 0
            elif stgcn_data['label'] == 'turnleft':
                stgcn_data['label_index'] = 1
            elif stgcn_data['label'] == 'turnright':
                stgcn_data['label_index'] = 2
            else:
                stgcn_data['label_index'] = 55555
            with open(dest_path, 'w') as outfile:
                json.dump(stgcn_data, outfile)
            
            
            labels[video_name]["label"] = stgcn_data['label']
            labels[video_name]["label_index"] = stgcn_data['label_index']

    with open(labels_file, 'w') as label_file:
        json.dump(labels, label_file)
